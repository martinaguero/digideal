/**
 * generated by Xtext 2.13.0
 */
package org.trimatek.digideal.contract;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.trimatek.digideal.contract.ContractPackage
 * @generated
 */
public interface ContractFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ContractFactory eINSTANCE = org.trimatek.digideal.contract.impl.ContractFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Contract</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Contract</em>'.
   * @generated
   */
  Contract createContract();

  /**
   * Returns a new object of class '<em>Sentence</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sentence</em>'.
   * @generated
   */
  Sentence createSentence();

  /**
   * Returns a new object of class '<em>Subject</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Subject</em>'.
   * @generated
   */
  Subject createSubject();

  /**
   * Returns a new object of class '<em>Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Reference</em>'.
   * @generated
   */
  Reference createReference();

  /**
   * Returns a new object of class '<em>Pay To</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pay To</em>'.
   * @generated
   */
  PayTo createPayTo();

  /**
   * Returns a new object of class '<em>Payment Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Payment Condition</em>'.
   * @generated
   */
  PaymentCondition createPaymentCondition();

  /**
   * Returns a new object of class '<em>Facts Level</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Facts Level</em>'.
   * @generated
   */
  FactsLevel createFactsLevel();

  /**
   * Returns a new object of class '<em>Any Fact</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Any Fact</em>'.
   * @generated
   */
  AnyFact createAnyFact();

  /**
   * Returns a new object of class '<em>All Facts</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>All Facts</em>'.
   * @generated
   */
  AllFacts createAllFacts();

  /**
   * Returns a new object of class '<em>Facts</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Facts</em>'.
   * @generated
   */
  Facts createFacts();

  /**
   * Returns a new object of class '<em>Supervised By</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Supervised By</em>'.
   * @generated
   */
  SupervisedBy createSupervisedBy();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ContractPackage getContractPackage();

} //ContractFactory
