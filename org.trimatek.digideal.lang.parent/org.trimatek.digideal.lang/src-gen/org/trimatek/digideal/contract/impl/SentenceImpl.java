/**
 * generated by Xtext 2.13.0
 */
package org.trimatek.digideal.contract.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.trimatek.digideal.contract.ContractPackage;
import org.trimatek.digideal.contract.Sentence;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sentence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.trimatek.digideal.contract.impl.SentenceImpl#getSentenceType <em>Sentence Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SentenceImpl extends MinimalEObjectImpl.Container implements Sentence
{
  /**
   * The default value of the '{@link #getSentenceType() <em>Sentence Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentenceType()
   * @generated
   * @ordered
   */
  protected static final String SENTENCE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSentenceType() <em>Sentence Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentenceType()
   * @generated
   * @ordered
   */
  protected String sentenceType = SENTENCE_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SentenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ContractPackage.Literals.SENTENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSentenceType()
  {
    return sentenceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSentenceType(String newSentenceType)
  {
    String oldSentenceType = sentenceType;
    sentenceType = newSentenceType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.SENTENCE__SENTENCE_TYPE, oldSentenceType, sentenceType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ContractPackage.SENTENCE__SENTENCE_TYPE:
        return getSentenceType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ContractPackage.SENTENCE__SENTENCE_TYPE:
        setSentenceType((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ContractPackage.SENTENCE__SENTENCE_TYPE:
        setSentenceType(SENTENCE_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ContractPackage.SENTENCE__SENTENCE_TYPE:
        return SENTENCE_TYPE_EDEFAULT == null ? sentenceType != null : !SENTENCE_TYPE_EDEFAULT.equals(sentenceType);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sentenceType: ");
    result.append(sentenceType);
    result.append(')');
    return result.toString();
  }

} //SentenceImpl
