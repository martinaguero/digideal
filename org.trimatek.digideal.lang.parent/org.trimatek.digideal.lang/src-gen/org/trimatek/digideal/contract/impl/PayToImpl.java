/**
 * generated by Xtext 2.13.0
 */
package org.trimatek.digideal.contract.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.trimatek.digideal.contract.ContractPackage;
import org.trimatek.digideal.contract.PayTo;
import org.trimatek.digideal.contract.Subject;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pay To</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.trimatek.digideal.contract.impl.PayToImpl#getPayer <em>Payer</em>}</li>
 *   <li>{@link org.trimatek.digideal.contract.impl.PayToImpl#getCollector <em>Collector</em>}</li>
 *   <li>{@link org.trimatek.digideal.contract.impl.PayToImpl#getSts <em>Sts</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PayToImpl extends SentenceImpl implements PayTo
{
  /**
   * The cached value of the '{@link #getPayer() <em>Payer</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPayer()
   * @generated
   * @ordered
   */
  protected Subject payer;

  /**
   * The cached value of the '{@link #getCollector() <em>Collector</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCollector()
   * @generated
   * @ordered
   */
  protected Subject collector;

  /**
   * The default value of the '{@link #getSts() <em>Sts</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSts()
   * @generated
   * @ordered
   */
  protected static final int STS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSts() <em>Sts</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSts()
   * @generated
   * @ordered
   */
  protected int sts = STS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PayToImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ContractPackage.Literals.PAY_TO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Subject getPayer()
  {
    if (payer != null && payer.eIsProxy())
    {
      InternalEObject oldPayer = (InternalEObject)payer;
      payer = (Subject)eResolveProxy(oldPayer);
      if (payer != oldPayer)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ContractPackage.PAY_TO__PAYER, oldPayer, payer));
      }
    }
    return payer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Subject basicGetPayer()
  {
    return payer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPayer(Subject newPayer)
  {
    Subject oldPayer = payer;
    payer = newPayer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.PAY_TO__PAYER, oldPayer, payer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Subject getCollector()
  {
    if (collector != null && collector.eIsProxy())
    {
      InternalEObject oldCollector = (InternalEObject)collector;
      collector = (Subject)eResolveProxy(oldCollector);
      if (collector != oldCollector)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ContractPackage.PAY_TO__COLLECTOR, oldCollector, collector));
      }
    }
    return collector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Subject basicGetCollector()
  {
    return collector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCollector(Subject newCollector)
  {
    Subject oldCollector = collector;
    collector = newCollector;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.PAY_TO__COLLECTOR, oldCollector, collector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSts()
  {
    return sts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSts(int newSts)
  {
    int oldSts = sts;
    sts = newSts;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.PAY_TO__STS, oldSts, sts));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ContractPackage.PAY_TO__PAYER:
        if (resolve) return getPayer();
        return basicGetPayer();
      case ContractPackage.PAY_TO__COLLECTOR:
        if (resolve) return getCollector();
        return basicGetCollector();
      case ContractPackage.PAY_TO__STS:
        return getSts();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ContractPackage.PAY_TO__PAYER:
        setPayer((Subject)newValue);
        return;
      case ContractPackage.PAY_TO__COLLECTOR:
        setCollector((Subject)newValue);
        return;
      case ContractPackage.PAY_TO__STS:
        setSts((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ContractPackage.PAY_TO__PAYER:
        setPayer((Subject)null);
        return;
      case ContractPackage.PAY_TO__COLLECTOR:
        setCollector((Subject)null);
        return;
      case ContractPackage.PAY_TO__STS:
        setSts(STS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ContractPackage.PAY_TO__PAYER:
        return payer != null;
      case ContractPackage.PAY_TO__COLLECTOR:
        return collector != null;
      case ContractPackage.PAY_TO__STS:
        return sts != STS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sts: ");
    result.append(sts);
    result.append(')');
    return result.toString();
  }

} //PayToImpl
