/*
 * generated by Xtext 2.13.0
 */
grammar InternalContract;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.trimatek.digideal.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.trimatek.digideal.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.trimatek.digideal.services.ContractGrammarAccess;

}
@parser::members {
	private ContractGrammarAccess grammarAccess;

	public void setGrammarAccess(ContractGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleContract
entryRuleContract
:
{ before(grammarAccess.getContractRule()); }
	 ruleContract
{ after(grammarAccess.getContractRule()); } 
	 EOF 
;

// Rule Contract
ruleContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractAccess().getGroup()); }
		(rule__Contract__Group__0)
		{ after(grammarAccess.getContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentence
entryRuleSentence
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceAccess().getAlternatives()); }
		(rule__Sentence__Alternatives)
		{ after(grammarAccess.getSentenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubject
entryRuleSubject
:
{ before(grammarAccess.getSubjectRule()); }
	 ruleSubject
{ after(grammarAccess.getSubjectRule()); } 
	 EOF 
;

// Rule Subject
ruleSubject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubjectAccess().getGroup()); }
		(rule__Subject__Group__0)
		{ after(grammarAccess.getSubjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmail
entryRuleEmail
:
{ before(grammarAccess.getEmailRule()); }
	 ruleEmail
{ after(grammarAccess.getEmailRule()); } 
	 EOF 
;

// Rule Email
ruleEmail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmailAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getEmailAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup()); }
		(rule__Reference__Group__0)
		{ after(grammarAccess.getReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePayTo
entryRulePayTo
:
{ before(grammarAccess.getPayToRule()); }
	 rulePayTo
{ after(grammarAccess.getPayToRule()); } 
	 EOF 
;

// Rule PayTo
rulePayTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPayToAccess().getGroup()); }
		(rule__PayTo__Group__0)
		{ after(grammarAccess.getPayToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePaymentCondition
entryRulePaymentCondition
:
{ before(grammarAccess.getPaymentConditionRule()); }
	 rulePaymentCondition
{ after(grammarAccess.getPaymentConditionRule()); } 
	 EOF 
;

// Rule PaymentCondition
rulePaymentCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPaymentConditionAccess().getGroup()); }
		(rule__PaymentCondition__Group__0)
		{ after(grammarAccess.getPaymentConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactsLevel
entryRuleFactsLevel
:
{ before(grammarAccess.getFactsLevelRule()); }
	 ruleFactsLevel
{ after(grammarAccess.getFactsLevelRule()); } 
	 EOF 
;

// Rule FactsLevel
ruleFactsLevel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactsLevelAccess().getOptionsAssignment()); }
		(rule__FactsLevel__OptionsAssignment)
		{ after(grammarAccess.getFactsLevelAccess().getOptionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnyFact
entryRuleAnyFact
:
{ before(grammarAccess.getAnyFactRule()); }
	 ruleAnyFact
{ after(grammarAccess.getAnyFactRule()); } 
	 EOF 
;

// Rule AnyFact
ruleAnyFact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyFactAccess().getValueAssignment()); }
		(rule__AnyFact__ValueAssignment)
		{ after(grammarAccess.getAnyFactAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllFacts
entryRuleAllFacts
:
{ before(grammarAccess.getAllFactsRule()); }
	 ruleAllFacts
{ after(grammarAccess.getAllFactsRule()); } 
	 EOF 
;

// Rule AllFacts
ruleAllFacts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllFactsAccess().getValueAssignment()); }
		(rule__AllFacts__ValueAssignment)
		{ after(grammarAccess.getAllFactsAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFacts
entryRuleFacts
:
{ before(grammarAccess.getFactsRule()); }
	 ruleFacts
{ after(grammarAccess.getFactsRule()); } 
	 EOF 
;

// Rule Facts
ruleFacts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactsAccess().getGroup()); }
		(rule__Facts__Group__0)
		{ after(grammarAccess.getFactsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSupervisedBy
entryRuleSupervisedBy
:
{ before(grammarAccess.getSupervisedByRule()); }
	 ruleSupervisedBy
{ after(grammarAccess.getSupervisedByRule()); } 
	 EOF 
;

// Rule SupervisedBy
ruleSupervisedBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSupervisedByAccess().getGroup()); }
		(rule__SupervisedBy__Group__0)
		{ after(grammarAccess.getSupervisedByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceAccess().getSentenceTypeAssignment_0()); }
		(rule__Sentence__SentenceTypeAssignment_0)
		{ after(grammarAccess.getSentenceAccess().getSentenceTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getSubjectParserRuleCall_1()); }
		ruleSubject
		{ after(grammarAccess.getSentenceAccess().getSubjectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getReferenceParserRuleCall_2()); }
		ruleReference
		{ after(grammarAccess.getSentenceAccess().getReferenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getPayToParserRuleCall_3()); }
		rulePayTo
		{ after(grammarAccess.getSentenceAccess().getPayToParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getPaymentConditionParserRuleCall_4()); }
		rulePaymentCondition
		{ after(grammarAccess.getSentenceAccess().getPaymentConditionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getSupervisedByParserRuleCall_5()); }
		ruleSupervisedBy
		{ after(grammarAccess.getSentenceAccess().getSupervisedByParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactsLevel__OptionsAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactsLevelAccess().getOptionsAnyFactParserRuleCall_0_0()); }
		ruleAnyFact
		{ after(grammarAccess.getFactsLevelAccess().getOptionsAnyFactParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactsLevelAccess().getOptionsAllFactsParserRuleCall_0_1()); }
		ruleAllFacts
		{ after(grammarAccess.getFactsLevelAccess().getOptionsAllFactsParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__0__Impl
	rule__Contract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getCONTRATOKeyword_0()); }
	'CONTRATO #'
	{ after(grammarAccess.getContractAccess().getCONTRATOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__1__Impl
	rule__Contract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getCidAssignment_1()); }
	(rule__Contract__CidAssignment_1)
	{ after(grammarAccess.getContractAccess().getCidAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getParagraphAssignment_2()); }
	(rule__Contract__ParagraphAssignment_2)*
	{ after(grammarAccess.getContractAccess().getParagraphAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__0__Impl
	rule__Subject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getSubjectAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__1__Impl
	rule__Subject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getNameAssignment_1()); }
	(rule__Subject__NameAssignment_1)
	{ after(grammarAccess.getSubjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__2__Impl
	rule__Subject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSubjectAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__3__Impl
	rule__Subject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getAddressAssignment_3()); }
	(rule__Subject__AddressAssignment_3)
	{ after(grammarAccess.getSubjectAccess().getAddressAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__4__Impl
	rule__Subject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getSubjectAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__5__Impl
	rule__Subject__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getEmailAssignment_5()); }
	(rule__Subject__EmailAssignment_5)
	{ after(grammarAccess.getSubjectAccess().getEmailAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSubjectAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getReferenceAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getTypeAssignment_1()); }
	(rule__Reference__TypeAssignment_1)
	{ after(grammarAccess.getReferenceAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PayTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group__0__Impl
	rule__PayTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getPayToAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group__1__Impl
	rule__PayTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getPayerAssignment_1()); }
	(rule__PayTo__PayerAssignment_1)
	{ after(grammarAccess.getPayToAccess().getPayerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group__2__Impl
	rule__PayTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getPagarAKeyword_2()); }
	'pagar\u00E1 a'
	{ after(grammarAccess.getPayToAccess().getPagarAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group__3__Impl
	rule__PayTo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getGroup_3()); }
	(rule__PayTo__Group_3__0)
	{ after(grammarAccess.getPayToAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group__4__Impl
	rule__PayTo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getLaSumaDeSTSKeyword_4()); }
	'la suma de STS'
	{ after(grammarAccess.getPayToAccess().getLaSumaDeSTSKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getStsAssignment_5()); }
	(rule__PayTo__StsAssignment_5)
	{ after(grammarAccess.getPayToAccess().getStsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PayTo__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group_3__0__Impl
	rule__PayTo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getCommercialAtKeyword_3_0()); }
	'@'
	{ after(grammarAccess.getPayToAccess().getCommercialAtKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PayTo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayToAccess().getCollectorAssignment_3_1()); }
	(rule__PayTo__CollectorAssignment_3_1)
	{ after(grammarAccess.getPayToAccess().getCollectorAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PaymentCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group__0__Impl
	rule__PaymentCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getSiKeyword_0()); }
	'si:'
	{ after(grammarAccess.getPaymentConditionAccess().getSiKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group__1__Impl
	rule__PaymentCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getGroup_1()); }
	(rule__PaymentCondition__Group_1__0)
	{ after(grammarAccess.getPaymentConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group__2__Impl
	rule__PaymentCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getDescriptionAssignment_2()); }
	(rule__PaymentCondition__DescriptionAssignment_2)
	{ after(grammarAccess.getPaymentConditionAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group__3__Impl
	rule__PaymentCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getLevelAssignment_3()); }
	(rule__PaymentCondition__LevelAssignment_3)
	{ after(grammarAccess.getPaymentConditionAccess().getLevelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getFactsAssignment_4()); }
	(rule__PaymentCondition__FactsAssignment_4)
	{ after(grammarAccess.getPaymentConditionAccess().getFactsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PaymentCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group_1__0__Impl
	rule__PaymentCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getCommercialAtKeyword_1_0()); }
	'@'
	{ after(grammarAccess.getPaymentConditionAccess().getCommercialAtKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentCondition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentConditionAccess().getCollectorAssignment_1_1()); }
	(rule__PaymentCondition__CollectorAssignment_1_1)
	{ after(grammarAccess.getPaymentConditionAccess().getCollectorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Facts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group__0__Impl
	rule__Facts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getFactsAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group__1__Impl
	rule__Facts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getGroup_1()); }
	(rule__Facts__Group_1__0)
	{ after(grammarAccess.getFactsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getFactsAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Facts__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group_1__0__Impl
	rule__Facts__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getFactAssignment_1_0()); }
	(rule__Facts__FactAssignment_1_0)
	{ after(grammarAccess.getFactsAccess().getFactAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getGroup_1_1()); }
	(rule__Facts__Group_1_1__0)*
	{ after(grammarAccess.getFactsAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Facts__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group_1_1__0__Impl
	rule__Facts__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getFactsAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facts__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactsAccess().getFactAssignment_1_1_1()); }
	(rule__Facts__FactAssignment_1_1_1)
	{ after(grammarAccess.getFactsAccess().getFactAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SupervisedBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupervisedBy__Group__0__Impl
	rule__SupervisedBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupervisedBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupervisedByAccess().getYSupervisadoPorKeyword_0()); }
	'y supervisado por '
	{ after(grammarAccess.getSupervisedByAccess().getYSupervisadoPorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupervisedBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupervisedBy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupervisedBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupervisedByAccess().getAgentAssignment_1()); }
	(rule__SupervisedBy__AgentAssignment_1)
	{ after(grammarAccess.getSupervisedByAccess().getAgentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__CidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getCidIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractAccess().getCidIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__ParagraphAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getParagraphSentenceParserRuleCall_2_0()); }
		ruleSentence
		{ after(grammarAccess.getContractAccess().getParagraphSentenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__SentenceTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceAccess().getSentenceTypeSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getSentenceAccess().getSentenceTypeSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSubjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__AddressAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getAddressSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubjectAccess().getAddressSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__EmailAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getEmailEmailParserRuleCall_5_0()); }
		ruleEmail
		{ after(grammarAccess.getSubjectAccess().getEmailEmailParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getTypeSubjectCrossReference_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getTypeSubjectIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceAccess().getTypeSubjectIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getTypeSubjectCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__PayerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPayToAccess().getPayerSubjectCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPayToAccess().getPayerSubjectIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPayToAccess().getPayerSubjectIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPayToAccess().getPayerSubjectCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__CollectorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPayToAccess().getCollectorSubjectCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getPayToAccess().getCollectorSubjectIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPayToAccess().getCollectorSubjectIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getPayToAccess().getCollectorSubjectCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PayTo__StsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPayToAccess().getStsINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getPayToAccess().getStsINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__CollectorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaymentConditionAccess().getCollectorSubjectCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getPaymentConditionAccess().getCollectorSubjectIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPaymentConditionAccess().getCollectorSubjectIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getPaymentConditionAccess().getCollectorSubjectCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaymentConditionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPaymentConditionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__LevelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaymentConditionAccess().getLevelFactsLevelParserRuleCall_3_0()); }
		ruleFactsLevel
		{ after(grammarAccess.getPaymentConditionAccess().getLevelFactsLevelParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentCondition__FactsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaymentConditionAccess().getFactsFactsParserRuleCall_4_0()); }
		ruleFacts
		{ after(grammarAccess.getPaymentConditionAccess().getFactsFactsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactsLevel__OptionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactsLevelAccess().getOptionsAlternatives_0()); }
		(rule__FactsLevel__OptionsAlternatives_0)
		{ after(grammarAccess.getFactsLevelAccess().getOptionsAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyFact__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyFactAccess().getValueDemostrableConCUALQUIERADeLosSiguientesHechosKeyword_0()); }
		(
			{ before(grammarAccess.getAnyFactAccess().getValueDemostrableConCUALQUIERADeLosSiguientesHechosKeyword_0()); }
			'demostrable con CUALQUIERA de los siguientes hechos:'
			{ after(grammarAccess.getAnyFactAccess().getValueDemostrableConCUALQUIERADeLosSiguientesHechosKeyword_0()); }
		)
		{ after(grammarAccess.getAnyFactAccess().getValueDemostrableConCUALQUIERADeLosSiguientesHechosKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllFacts__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllFactsAccess().getValueDemostrableConTODOSLosSiguientesHechosKeyword_0()); }
		(
			{ before(grammarAccess.getAllFactsAccess().getValueDemostrableConTODOSLosSiguientesHechosKeyword_0()); }
			'demostrable con TODOS los siguientes hechos:'
			{ after(grammarAccess.getAllFactsAccess().getValueDemostrableConTODOSLosSiguientesHechosKeyword_0()); }
		)
		{ after(grammarAccess.getAllFactsAccess().getValueDemostrableConTODOSLosSiguientesHechosKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__FactAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactsAccess().getFactSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getFactsAccess().getFactSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facts__FactAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactsAccess().getFactSTRINGTerminalRuleCall_1_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFactsAccess().getFactSTRINGTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupervisedBy__AgentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupervisedByAccess().getAgentSubjectParserRuleCall_1_0()); }
		ruleSubject
		{ after(grammarAccess.getSupervisedByAccess().getAgentSubjectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
