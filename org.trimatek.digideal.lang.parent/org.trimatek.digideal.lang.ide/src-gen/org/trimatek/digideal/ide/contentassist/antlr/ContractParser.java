/*
 * generated by Xtext 2.13.0
 */
package org.trimatek.digideal.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.trimatek.digideal.ide.contentassist.antlr.internal.InternalContractParser;
import org.trimatek.digideal.services.ContractGrammarAccess;

public class ContractParser extends AbstractContentAssistParser {

	@Inject
	private ContractGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalContractParser createParser() {
		InternalContractParser result = new InternalContractParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSentenceAccess().getAlternatives(), "rule__Sentence__Alternatives");
					put(grammarAccess.getFactsLevelAccess().getOptionsAlternatives_0(), "rule__FactsLevel__OptionsAlternatives_0");
					put(grammarAccess.getContractAccess().getGroup(), "rule__Contract__Group__0");
					put(grammarAccess.getSubjectAccess().getGroup(), "rule__Subject__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup(), "rule__Reference__Group__0");
					put(grammarAccess.getPayToAccess().getGroup(), "rule__PayTo__Group__0");
					put(grammarAccess.getPayToAccess().getGroup_3(), "rule__PayTo__Group_3__0");
					put(grammarAccess.getPaymentConditionAccess().getGroup(), "rule__PaymentCondition__Group__0");
					put(grammarAccess.getPaymentConditionAccess().getGroup_1(), "rule__PaymentCondition__Group_1__0");
					put(grammarAccess.getFactsAccess().getGroup(), "rule__Facts__Group__0");
					put(grammarAccess.getFactsAccess().getGroup_1(), "rule__Facts__Group_1__0");
					put(grammarAccess.getFactsAccess().getGroup_1_1(), "rule__Facts__Group_1_1__0");
					put(grammarAccess.getSupervisedByAccess().getGroup(), "rule__SupervisedBy__Group__0");
					put(grammarAccess.getContractAccess().getCidAssignment_1(), "rule__Contract__CidAssignment_1");
					put(grammarAccess.getContractAccess().getParagraphAssignment_2(), "rule__Contract__ParagraphAssignment_2");
					put(grammarAccess.getSentenceAccess().getSentenceTypeAssignment_0(), "rule__Sentence__SentenceTypeAssignment_0");
					put(grammarAccess.getSubjectAccess().getNameAssignment_1(), "rule__Subject__NameAssignment_1");
					put(grammarAccess.getSubjectAccess().getAddressAssignment_3(), "rule__Subject__AddressAssignment_3");
					put(grammarAccess.getSubjectAccess().getEmailAssignment_5(), "rule__Subject__EmailAssignment_5");
					put(grammarAccess.getReferenceAccess().getTypeAssignment_1(), "rule__Reference__TypeAssignment_1");
					put(grammarAccess.getPayToAccess().getPayerAssignment_1(), "rule__PayTo__PayerAssignment_1");
					put(grammarAccess.getPayToAccess().getCollectorAssignment_3_1(), "rule__PayTo__CollectorAssignment_3_1");
					put(grammarAccess.getPayToAccess().getStsAssignment_5(), "rule__PayTo__StsAssignment_5");
					put(grammarAccess.getPaymentConditionAccess().getCollectorAssignment_1_1(), "rule__PaymentCondition__CollectorAssignment_1_1");
					put(grammarAccess.getPaymentConditionAccess().getDescriptionAssignment_2(), "rule__PaymentCondition__DescriptionAssignment_2");
					put(grammarAccess.getPaymentConditionAccess().getLevelAssignment_3(), "rule__PaymentCondition__LevelAssignment_3");
					put(grammarAccess.getPaymentConditionAccess().getFactsAssignment_4(), "rule__PaymentCondition__FactsAssignment_4");
					put(grammarAccess.getFactsLevelAccess().getOptionsAssignment(), "rule__FactsLevel__OptionsAssignment");
					put(grammarAccess.getAnyFactAccess().getValueAssignment(), "rule__AnyFact__ValueAssignment");
					put(grammarAccess.getAllFactsAccess().getValueAssignment(), "rule__AllFacts__ValueAssignment");
					put(grammarAccess.getFactsAccess().getFactAssignment_1_0(), "rule__Facts__FactAssignment_1_0");
					put(grammarAccess.getFactsAccess().getFactAssignment_1_1_1(), "rule__Facts__FactAssignment_1_1_1");
					put(grammarAccess.getSupervisedByAccess().getAgentAssignment_1(), "rule__SupervisedBy__AgentAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ContractGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ContractGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
